{"version":3,"sources":["patient_frontend/core.cljs"],"mappings":"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","names":["patient-frontend.core/api-url","patient-frontend.core/success-status","patient-frontend.core/form-fields","js/patient-frontend","js/patient-frontend.core","js/patient-frontend.core.root","patient-frontend.core/root","reagent.dom.client/create-root","js/document","js/patient-frontend.core.patients","patient-frontend.core/patients","reagent.core.atom","js/patient-frontend.core.current-patient","patient-frontend.core/current-patient","js/patient-frontend.core.loading?","patient-frontend.core/loading?","js/patient-frontend.core.error-msg","patient-frontend.core/error-msg","js/patient-frontend.core.form-data","patient-frontend.core/form-data","patient-frontend.core/handle-api-response","response","success-fn","error-message","cljs.core/reset!","G__23296","patient-frontend.core/fetch-patients","c__15045__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__15046__auto__","switch__13956__auto__","state_23310","state_val_23311","inst_23298","inst_23299","inst_23300","inst_23301","cljs.core/PersistentHashMap","inst_23302","inst_23303","inst_23304","cljs.core.async.impl.ioc-helpers/take!","inst_23306","inst_23307","p1__23297#","inst_23308","cljs.core.async.impl.ioc-helpers/return-chan","statearr-23312","state-machine__13957__auto__","ret-value__13958__auto__","result__13959__auto__","cljs.core/keyword-identical?","ex__13960__auto__","e23313","statearr-23314","cljs.core/seq","statearr-23315","cljs.core/first","state__15047__auto__","statearr-23316","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs_http.client.get","patient-frontend.core/create-patient","patient-data","state_23329","state_val_23330","inst_23317","inst_23318","inst_23319","inst_23320","inst_23321","inst_23322","inst_23323","inst_23325","inst_23326","inst_23327","statearr-23331","e23332","statearr-23333","statearr-23334","statearr-23335","cljs_http.client.post","patient-frontend.core/update-patient","patient-id","state_23349","state_val_23350","inst_23336","inst_23337","inst_23338","inst_23339","inst_23340","inst_23341","inst_23342","inst_23343","inst_23345","inst_23346","inst_23347","statearr-23351","e23352","statearr-23353","statearr-23354","statearr-23355","cljs_http.client.put","patient-frontend.core/delete-patient","state_23369","state_val_23370","inst_23356","inst_23357","inst_23358","inst_23359","inst_23360","inst_23361","inst_23362","inst_23363","inst_23365","inst_23366","inst_23367","statearr-23371","e23372","statearr-23373","statearr-23374","statearr-23375","cljs_http.client.delete$","patient-frontend.core/patient-list","cljs.core/deref","patients-data","cljs.core/empty?","cljs.core.doall","iter__5480__auto__","s__23377","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__23379","cljs.core/chunk-buffer","i__23378","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__23376","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","patient","p__23380","map__23381","cljs.core/--destructure-map","cljs.core.get","patient-frontend.core/form-input","id","label","type","value","on-change","or__5002__auto__","patient-frontend.core/patient-form","form-values","e","s__23384","b__23386","i__23385","map__23387","p1__23382#","iter__23383","map__23388","cljs.core.swap_BANG_","cljs.core/assoc","patient-frontend.core/app","patient-frontend.core/init","reagent.dom.client.render","cljs.core/chunk-first"],"sourcesContent":["(ns patient-frontend.core\r\n  (:require\r\n    [cljs-http.client :as http]\r\n    [cljs.core.async :refer [go <!]]\r\n    [reagent.core :as reagent]\r\n    [reagent.dom.client :as rdc]))\r\n\r\n(def api-url \"http://localhost:3000/patients\")\r\n(def success-status #{200 201})\r\n(def form-fields\r\n  [{:id :patients/full_name :label \"Full Name\" :type \"text\"}\r\n   {:id :patients/gender :label \"Gender\" :type \"text\"}\r\n   {:id :patients/birth_date :label \"Birth Date\" :type \"date\"}\r\n   {:id :patients/address :label \"Address\" :type \"text\"}\r\n   {:id :patients/oms_number :label \"OMS Number\" :type \"text\"}])\r\n\r\n(defonce root (rdc/create-root (.getElementById js/document \"app\")))\r\n(defonce patients (reagent/atom []))\r\n(defonce current-patient (reagent/atom nil))\r\n(defonce loading? (reagent/atom false))\r\n(defonce error-msg (reagent/atom nil))\r\n(defonce form-data (reagent/atom {}))\r\n\r\n(defn handle-api-response [response success-fn error-message]\r\n      (reset! loading? false)\r\n      (if (success-status (:status response))\r\n        (success-fn response)\r\n        (reset! error-msg error-message)))\r\n\r\n(defn fetch-patients []\r\n      (reset! loading? true)\r\n      (reset! error-msg nil)\r\n      (go\r\n        (let [response (<! (http/get api-url\r\n                                     {:with-credentials? false\r\n                                      :headers {\"Accept\" \"application/json\"}}))]\r\n             (handle-api-response response\r\n                                  #(reset! patients (:body %))\r\n                                  \"Failed to fetch patients\"))))\r\n\r\n(defn create-patient [patient-data]\r\n      (go\r\n        (let [response (<! (http/post api-url\r\n                                      {:json-params patient-data\r\n                                       :with-credentials? false\r\n                                       :headers {\"Content-Type\" \"application/json\"\r\n                                                 \"Accept\" \"application/json\"}}))]\r\n             (handle-api-response response\r\n                                  #(do\r\n                                     (fetch-patients)\r\n                                     (reset! current-patient nil)\r\n                                     (reset! form-data {}))\r\n                                  \"Failed to create patient\"))))\r\n\r\n(defn update-patient [patient-id patient-data]\r\n      (go\r\n        (let [response (<! (http/put (str api-url \"/\" patient-id)\r\n                                     {:json-params patient-data\r\n                                      :with-credentials? false\r\n                                      :headers {\"Content-Type\" \"application/json\"\r\n                                                \"Accept\" \"application/json\"}}))]\r\n             (handle-api-response response\r\n                                  #(do\r\n                                     (fetch-patients)\r\n                                     (reset! current-patient nil)\r\n                                     (reset! form-data {}))\r\n                                  \"Failed to update patient\"))))\r\n\r\n(defn delete-patient [patient-id]\r\n      (go\r\n        (let [response (<! (http/delete (str api-url \"/\" patient-id)\r\n                                        {:with-credentials? false\r\n                                         :headers {\"Accept\" \"application/json\"}}))]\r\n             (handle-api-response response\r\n                                  #(fetch-patients)\r\n                                  \"Failed to delete patient\"))))\r\n\r\n\r\n(defn patient-list []\r\n      (let [patients-data @patients]\r\n           [:div\r\n            [:h2 \"Patient List\"]\r\n            (cond\r\n              @loading? [:p \"Loading...\"]\r\n              @error-msg [:p {:style {:color \"red\"}} @error-msg]\r\n              (empty? patients-data) [:p \"No patients found.\"]\r\n              :else\r\n              [:ul\r\n               (doall\r\n                 (for [patient patients-data]\r\n                      ^{:key (:patients/id patient)}\r\n                      [:li\r\n                       (:patients/full_name patient)\r\n                       [:button {:on-click #(do\r\n                                              (reset! current-patient patient)\r\n                                              (reset! form-data patient))} \"Edit\"]\r\n                       [:button {:on-click #(delete-patient (:patients/id patient))} \"Delete\"]]))])]))\r\n\r\n(defn form-input [{:keys [id label type value on-change]}]\r\n      [:div\r\n       [:label (str label \": \")]\r\n       [:input {:type type\r\n                :value (or value \"\")\r\n                :on-change on-change}]])\r\n\r\n(defn patient-form []\r\n      (let [patient @current-patient\r\n            form-values @form-data]\r\n           [:div\r\n            [:h2 (if patient \"Edit Patient\" \"Add Patient\")]\r\n            [:form\r\n             {:on-submit\r\n              (fn [e]\r\n                  (.preventDefault e)\r\n                  (if patient\r\n                    (update-patient (:patients/id patient) form-values)\r\n                    (create-patient form-values)))}\r\n             [:div.form-fields\r\n              (doall\r\n                (for [{:keys [id label type]} form-fields]\r\n                     ^{:key id}\r\n                     [form-input\r\n                      {:id id\r\n                       :label label\r\n                       :type type\r\n                       :value (get form-values id \"\")\r\n                       :on-change #(swap! form-data assoc id (.. % -target -value))}]))]\r\n             [:button {:type \"submit\"} (if patient \"Update\" \"Create\")]]]))\r\n(defn app []\r\n      [:div\r\n       [:h1 \"Patient Management\"]\r\n       [patient-form]\r\n       [patient-list]])\r\n\r\n(defn init []\r\n      (fetch-patients)\r\n      (rdc/render root [app]))\r\n\r\n(init)"]}